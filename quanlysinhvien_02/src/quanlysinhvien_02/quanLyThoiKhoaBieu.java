/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlysinhvien_02;

import DAO.DiemDAO;
import DAO.LopDAO;
import DAO.MonHocDAO;
import DAO.SinhVienDAO;
import DAO.SvMonHocDAO;
import DAO.ThoiKhoaBieuDAO;
import POJO.Diem;
import POJO.Lop;
import POJO.Monhoc;
import POJO.Sinhvien;
import POJO.SvMonhoc;
import POJO.Thoikhoabieu;
import POJO.ThoikhoabieuId;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.text.DecimalFormat;
import java.util.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Gogojungle
 */
public class quanLyThoiKhoaBieu extends javax.swing.JFrame {

    /**
     * Creates new form quanLyThoiKhoaBieu
     */    
    private String className = "";    
    private String[] columnNames = {
        "STT", "Mã môn", "Tên môn", "Phòng học"
    };
    private String[] columnTKBLop = {
        "STT", "Mã Môn", "Tên Môn", "Học Kì"
    };    
    private String[] columnTableSVMH = {
        "STT", "MSSV", "Họ Tên", "Giới Tính", "CMND"
    }; 
    private String[] columnDiem = {
        "STT", "MSSV", "Họ Tên", "Điểm GK", "Điểm CK", "Điểm Khác", "Điểm Tổng", "Xếp Loại"
    }; 
    private final int IMPORT_FILE = 1;
    private final int IMPORT_FILE_SCORE = 2;
    quanlylop qlLop;
            
    public quanLyThoiKhoaBieu() {
        initComponents();
        initLayout();
    }

    public quanLyThoiKhoaBieu(String _className, quanlylop _qlLop) {
        this.className = _className;
        this.qlLop = _qlLop;
        initComponents();
        initLayout();
        this.qlLop.setVisible(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lableTKB = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTKB = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        notify = new javax.swing.JLabel();
        comboHocKi = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnImportTKB = new javax.swing.JButton();
        comboBoxMonHoc = new javax.swing.JComboBox<>();
        lableListMH = new javax.swing.JLabel();
        panelListSV = new javax.swing.JPanel();
        lableDSSVLop = new javax.swing.JLabel();
        notifyDSDiem = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableSVByMH = new javax.swing.JTable();
        panelDSSV = new javax.swing.JPanel();
        btnDSSV = new javax.swing.JButton();
        btnAddSVBySubject = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        panelDiem = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnImportDiem = new javax.swing.JButton();
        btnDiem = new javax.swing.JButton();
        panelInfoSV = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        textMSSV = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        panelUpdate = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textGK = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textName = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtMSSV = new javax.swing.JTextField();
        textKhac = new javax.swing.JTextField();
        textCK = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        panelThongKe = new javax.swing.JPanel();
        labelThongKe = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        textSLPass = new javax.swing.JTextField();
        textTLPass = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        textSLFail = new javax.swing.JTextField();
        textTLFail = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Giáo Vụ Quản Lý");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lableTKB.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lableTKB.setForeground(new java.awt.Color(0, 153, 153));
        lableTKB.setText("TKB");
        getContentPane().add(lableTKB, new org.netbeans.lib.awtextra.AbsoluteConstraints(201, 445, -1, -1));

        tableTKB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableTKB.setEnabled(false);
        jScrollPane1.setViewportView(tableTKB);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(201, 488, 911, 115));

        jButton1.setBackground(new java.awt.Color(153, 153, 153));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Thoát");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1225, 13, -1, 35));

        notify.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        notify.setForeground(new java.awt.Color(255, 51, 0));
        notify.setText("Chưa Có Thời Khóa Biểu!");
        getContentPane().add(notify, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 445, 213, -1));

        comboHocKi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboHocKi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL", "HKI", "HKII", "HKIII" }));
        comboHocKi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboHocKiActionPerformed(evt);
            }
        });
        getContentPane().add(comboHocKi, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 370, 67, 31));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Học Kì:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 380, -1, -1));

        btnImportTKB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnImportTKB.setText("Import TKB");
        btnImportTKB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportTKBActionPerformed(evt);
            }
        });
        getContentPane().add(btnImportTKB, new org.netbeans.lib.awtextra.AbsoluteConstraints(741, 445, -1, -1));

        comboBoxMonHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxMonHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxMonHocActionPerformed(evt);
            }
        });
        getContentPane().add(comboBoxMonHoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 370, 82, 31));

        lableListMH.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lableListMH.setText("DS Môn Học (HK):");
        getContentPane().add(lableListMH, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 380, -1, -1));

        lableDSSVLop.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lableDSSVLop.setForeground(new java.awt.Color(0, 153, 153));
        lableDSSVLop.setText("DSSV");

        notifyDSDiem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        notifyDSDiem.setForeground(new java.awt.Color(255, 51, 0));
        notifyDSDiem.setText("notify");

        tableSVByMH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableSVByMH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableSVByMHMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableSVByMH);

        javax.swing.GroupLayout panelListSVLayout = new javax.swing.GroupLayout(panelListSV);
        panelListSV.setLayout(panelListSVLayout);
        panelListSVLayout.setHorizontalGroup(
            panelListSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelListSVLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelListSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1052, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelListSVLayout.createSequentialGroup()
                        .addComponent(lableDSSVLop)
                        .addGap(54, 54, 54)
                        .addComponent(notifyDSDiem)))
                .addContainerGap())
        );
        panelListSVLayout.setVerticalGroup(
            panelListSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelListSVLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelListSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lableDSSVLop)
                    .addComponent(notifyDSDiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162))
        );

        getContentPane().add(panelListSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 616, -1, 189));

        panelDSSV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnDSSV.setText("DS Sinh Viên");
        btnDSSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDSSVActionPerformed(evt);
            }
        });

        btnAddSVBySubject.setBackground(new java.awt.Color(153, 204, 255));
        btnAddSVBySubject.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAddSVBySubject.setText("Thêm SV");
        btnAddSVBySubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSVBySubjectActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 153));
        jLabel4.setText("Quản Lý DSSV");

        javax.swing.GroupLayout panelDSSVLayout = new javax.swing.GroupLayout(panelDSSV);
        panelDSSV.setLayout(panelDSSVLayout);
        panelDSSVLayout.setHorizontalGroup(
            panelDSSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDSSVLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDSSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDSSVLayout.createSequentialGroup()
                        .addComponent(btnDSSV)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddSVBySubject, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDSSVLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(57, 57, 57))))
        );
        panelDSSVLayout.setVerticalGroup(
            panelDSSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDSSVLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(11, 11, 11)
                .addGroup(panelDSSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDSSV)
                    .addComponent(btnAddSVBySubject))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        getContentPane().add(panelDSSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 30, -1, 90));

        panelDiem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 153));
        jLabel2.setText("Quản Lý Điểm");

        btnImportDiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnImportDiem.setText("Import");
        btnImportDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportDiemActionPerformed(evt);
            }
        });

        btnDiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDiem.setText("Bảng Điểm");
        btnDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDiemLayout = new javax.swing.GroupLayout(panelDiem);
        panelDiem.setLayout(panelDiemLayout);
        panelDiemLayout.setHorizontalGroup(
            panelDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDiemLayout.createSequentialGroup()
                .addGroup(panelDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDiemLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(btnDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDiemLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(panelDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDiemLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(btnImportDiem))
                            .addComponent(jLabel2))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        panelDiemLayout.setVerticalGroup(
            panelDiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDiemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnImportDiem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDiem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(panelDiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, 110));

        panelInfoSV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("MSSV:");

        textMSSV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnSave.setBackground(new java.awt.Color(153, 204, 255));
        btnSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSave.setText("Thêm");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 153, 153));
        jLabel14.setText("Thêm Sinh Viên");

        javax.swing.GroupLayout panelInfoSVLayout = new javax.swing.GroupLayout(panelInfoSV);
        panelInfoSV.setLayout(panelInfoSVLayout);
        panelInfoSVLayout.setHorizontalGroup(
            panelInfoSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoSVLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelInfoSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textMSSV)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInfoSVLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(46, 46, 46))
        );
        panelInfoSVLayout.setVerticalGroup(
            panelInfoSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoSVLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelInfoSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(textMSSV, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        getContentPane().add(panelInfoSV, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 150, 200, 150));

        panelUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 153));
        jLabel3.setText("Cập Nhật Điểm");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("MSSV: ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setText("Họ Tên:");

        textName.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel11.setText("Điểm CK:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel12.setText("Điểm GK:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel13.setText("Điểm Khác:");

        txtMSSV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMSSV.setEnabled(false);

        btnUpdate.setBackground(new java.awt.Color(0, 153, 153));
        btnUpdate.setText("Lưu");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelUpdateLayout = new javax.swing.GroupLayout(panelUpdate);
        panelUpdate.setLayout(panelUpdateLayout);
        panelUpdateLayout.setHorizontalGroup(
            panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUpdateLayout.createSequentialGroup()
                .addGap(187, 187, 187)
                .addComponent(jLabel3)
                .addContainerGap(307, Short.MAX_VALUE))
            .addGroup(panelUpdateLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelUpdateLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textGK, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textCK, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textKhac, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelUpdateLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMSSV, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelUpdateLayout.setVerticalGroup(
            panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUpdateLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(textName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMSSV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(panelUpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textGK, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(textCK, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(textKhac, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        getContentPane().add(panelUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, 600, -1));

        panelThongKe.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));

        labelThongKe.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        labelThongKe.setText("Thống Kê");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 153, 153));
        jLabel15.setText("Đậu");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Số Lượng:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Tỉ Lệ (%):");

        textSLPass.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        textSLPass.setText("0");
        textSLPass.setEnabled(false);
        textSLPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSLPassActionPerformed(evt);
            }
        });

        textTLPass.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        textTLPass.setText("0");
        textTLPass.setEnabled(false);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 153, 153));
        jLabel18.setText("Rớt");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Số Lượng:");

        textSLFail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        textSLFail.setText("0");
        textSLFail.setEnabled(false);

        textTLFail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        textTLFail.setText("0");
        textTLFail.setEnabled(false);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Tỉ Lệ (%):");

        javax.swing.GroupLayout panelThongKeLayout = new javax.swing.GroupLayout(panelThongKe);
        panelThongKe.setLayout(panelThongKeLayout);
        panelThongKeLayout.setHorizontalGroup(
            panelThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelThongKeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(textSLPass, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(panelThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelThongKeLayout.createSequentialGroup()
                        .addGroup(panelThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelThongKeLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel15)
                                .addGap(33, 33, 33)
                                .addComponent(jLabel17))
                            .addGroup(panelThongKeLayout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(textTLPass, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addGroup(panelThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(textSLFail, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGroup(panelThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelThongKeLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel18)
                                .addGap(33, 33, 33)
                                .addComponent(jLabel20))
                            .addGroup(panelThongKeLayout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(textTLFail, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelThongKeLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(labelThongKe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelThongKeLayout.setVerticalGroup(
            panelThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelThongKeLayout.createSequentialGroup()
                .addGroup(panelThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelThongKeLayout.createSequentialGroup()
                        .addGroup(panelThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelThongKeLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(labelThongKe)
                                .addGap(25, 25, 25)
                                .addGroup(panelThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17)))
                            .addGroup(panelThongKeLayout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jLabel15)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textSLPass, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textTLPass, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelThongKeLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(panelThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelThongKeLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(panelThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20)))
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textSLFail, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textTLFail, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        getContentPane().add(panelThongKe, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, 490, 130));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:        
       this.qlLop.setVisible(true);
       this.dispose();     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void comboHocKiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboHocKiActionPerformed
        // TODO add your handling code here:
        String hocKi = comboHocKi.getSelectedItem().toString();
        if(!hocKi.equals("ALL")){
            chiTietTKB(hocKi);
            lableListMH.setVisible(true);
            lableListMH.setText("DS Môn Học (" + hocKi + "):");
            comboBoxMonHoc.setVisible(true);
        } else {
            showALLTKB();
            lableListMH.setVisible(false);
            comboBoxMonHoc.setVisible(false);
        }
                
    }//GEN-LAST:event_comboHocKiActionPerformed

    private void btnImportTKBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportTKBActionPerformed
        // TODO add your handling code here:
        String hocKi = comboHocKi.getSelectedItem().toString();
        List<Thoikhoabieu> tkb = ThoiKhoaBieuDAO.layTKBByLop_HocKi(className, hocKi);
        if(comboHocKi.getSelectedItem().equals("ALL")){            
            JOptionPane.showMessageDialog(null, "Vui Lòng Chọn Học Kì !!!");
        } else if(tkb.size() > 0){
            JOptionPane.showMessageDialog(null, "Học Kì Này Đã Có Thời Khóa Biểu !!!");            
        } else {
            importFile("Choose file import", IMPORT_FILE);
        }
    }//GEN-LAST:event_btnImportTKBActionPerformed

    private void comboBoxMonHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxMonHocActionPerformed
        // TODO add your handling code here:        
        panelDSSV.setVisible(true);
        panelDiem.setVisible(true);
    }//GEN-LAST:event_comboBoxMonHocActionPerformed

    private void tableSVByMHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableSVByMHMouseClicked
        // TODO add your handling code here:
        panelUpdate.setVisible(true);
        if(panelUpdate.isShowing()){
//
            int index = tableSVByMH.getSelectedRow();
            TableModel md = tableSVByMH.getModel();
            String mssv = md.getValueAt(index, 1).toString();
            String hoTen = md.getValueAt(index, 2).toString();
            String diemGK = md.getValueAt(index, 3).toString();
            String diemCK = md.getValueAt(index, 4).toString();
            String diemKhac = md.getValueAt(index, 5).toString();

            txtMSSV.setText(mssv);
            textName.setText(hoTen);
            textGK.setText(diemGK);
            textCK.setText(diemCK);
            textKhac.setText(diemKhac);
            
            System.out.println(mssv + " - " + hoTen);
        } else{
            tableSVByMH.setRowSelectionAllowed(false);
        }
    }//GEN-LAST:event_tableSVByMHMouseClicked

    private void btnDSSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDSSVActionPerformed
        // TODO add your handling code here:
        panelUpdate.setVisible(false);
        panelThongKe.setVisible(false);
        String hocKi = comboHocKi.getSelectedItem().toString();
        String maMH = comboBoxMonHoc.getSelectedItem().toString();
        notifyDSDiem.setVisible(false);
        panelListSV.setVisible(true);
        tableSVByMH.setVisible(true);
        
        showListSVMH(this.className, maMH, hocKi); 
    }//GEN-LAST:event_btnDSSVActionPerformed

    private void btnAddSVBySubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSVBySubjectActionPerformed
        // TODO add your handling code here:
        panelInfoSV.setVisible(true);
    }//GEN-LAST:event_btnAddSVBySubjectActionPerformed

    private void btnImportDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportDiemActionPerformed
        // TODO add your handling code here:
        importFile("Choose file import", IMPORT_FILE_SCORE);
    }//GEN-LAST:event_btnImportDiemActionPerformed

    private void btnDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiemActionPerformed
        // TODO add your handling code here:

        showTableDiem();
//        notifyDSDiem.setVisible(false);
//        panelListSV.setVisible(true);
//        panelThongKe.setVisible(true);
//        tableSVByMH.setRowSelectionAllowed(true);
//        tableSVByMH.setEnabled(true);
//        panelUpdate.setVisible(true);
//        
//        String valueComboBox = comboBoxMonHoc.getSelectedItem().toString();
//        DefaultTableModel table = new DefaultTableModel();//
//        
//        lableDSSVLop.setText("Danh sách điểm: " + className + " - " + valueComboBox);
//        labelThongKe.setText("Thống Kê " + className + "-" + valueComboBox);
//        table.setColumnIdentifiers(columnDiem);
//        
//        SvMonhoc svmh = SvMonHocDAO.layThongTinSV(className, valueComboBox);
//        int stt = 1;
//            Sinhvien sv = SinhVienDAO.layThongTinSV(svmh.getMaSV());
//            List<Diem> listDiem = DiemDAO.layDSDiemById(svmh.getMaLop(), svmh.getMaMh());
//            
////            System.out.println("size: " + listDiem.size());
//            if(listDiem.size() > 0) {                
//                for(Diem diem : listDiem){
////                    System.out.println(diem.getId() + " - " + diem.getDiemTong() + " - " + diem.xepLoai());
//                    String[] rows = new String[8];
//                    rows[0] = String.valueOf(stt);
//                    rows[1] = sv.getMssv();
//                    rows[2] = sv.getHoTen();
//                    rows[3] = String.valueOf(diem.getDiemGk());
//                    rows[4] = String.valueOf(diem.getDiemCk());
//                    rows[5] = String.valueOf(diem.getDiemKhac());
//                    rows[6] = String.valueOf(diem.getDiemTong());
//                    rows[7] = diem.xepLoai();
//
//                    table.addRow(rows); 
//                    stt++;
//                }                
//                tableSVByMH.setModel(table);      
//                List statistical = this.getStatistical(listDiem);
//                
//                DecimalFormat decimalFormat = new DecimalFormat("#.##");
//                textSLPass.setText(String.valueOf(statistical.get(0)));
//                textTLPass.setText(String.valueOf(decimalFormat.format(statistical.get(1))));
//                textSLFail.setText(String.valueOf(statistical.get(2)));
//                textTLFail.setText(String.valueOf(decimalFormat.format(statistical.get(3))));
//            } 
//            else {      
//                textSLPass.setText("0");
//                textTLPass.setText("0");
//                textSLFail.setText("0");
//                textTLFail.setText("0");
//
//                panelUpdate.setVisible(false);
//                panelListSV.setVisible(true);
//                lableDSSVLop.setVisible(true);                
//                tableSVByMH.setModel(table);
//                notifyDSDiem.setVisible(true);
//                notifyDSDiem.setText("Chưa Có Bảng Điểm!!!");
//            }           
        
    }//GEN-LAST:event_btnDiemActionPerformed
    
    private void showTableDiem(){
        notifyDSDiem.setVisible(false);
        panelListSV.setVisible(true);
        panelThongKe.setVisible(true);
        tableSVByMH.setRowSelectionAllowed(true);
        tableSVByMH.setEnabled(true);
//        panelUpdate.setVisible(true);
        
        String valueComboBox = comboBoxMonHoc.getSelectedItem().toString();
        DefaultTableModel table = new DefaultTableModel();//
        
        lableDSSVLop.setText("Danh sách điểm: " + className + " - " + valueComboBox);
        labelThongKe.setText("Thống Kê " + className + "-" + valueComboBox);
        table.setColumnIdentifiers(columnDiem);
        
        ThoikhoabieuId id = new ThoikhoabieuId(className, valueComboBox);
        Thoikhoabieu tkb = ThoiKhoaBieuDAO.layThongTinTKB(id);
        int stt = 1;
            List<Diem> listDiem = DiemDAO.layDSDiemById(tkb.getId().getMaLop(), tkb.getId().getMaMh());
            
            if(listDiem.size() > 0) {                
                for(Diem diem : listDiem){
                    Sinhvien sv = SinhVienDAO.layThongTinSV(diem.getSv().getMssv());
//                    System.out.println(diem.getId() + " - " + diem.getDiemTong() + " - " + diem.xepLoai());
                    String[] rows = new String[8];
                    rows[0] = String.valueOf(stt);
                    rows[1] = diem.getSv().getMssv();
                    rows[2] = sv.getHoTen();
                    rows[3] = String.valueOf(diem.getDiemGk());
                    rows[4] = String.valueOf(diem.getDiemCk());
                    rows[5] = String.valueOf(diem.getDiemKhac());
                    rows[6] = String.valueOf(diem.getDiemTong());
                    rows[7] = diem.xepLoai();

                    table.addRow(rows); 
                    stt++;
                }                
                tableSVByMH.setModel(table);      
                List statistical = this.getStatistical(listDiem);
                
                DecimalFormat decimalFormat = new DecimalFormat("#.##");
                textSLPass.setText(String.valueOf(statistical.get(0)));
                textTLPass.setText(String.valueOf(decimalFormat.format(statistical.get(1))));
                textSLFail.setText(String.valueOf(statistical.get(2)));
                textTLFail.setText(String.valueOf(decimalFormat.format(statistical.get(3))));
            } 
            else {      
                textSLPass.setText("0");
                textTLPass.setText("0");
                textSLFail.setText("0");
                textTLFail.setText("0");

                panelUpdate.setVisible(false);
                panelListSV.setVisible(true);
                lableDSSVLop.setVisible(true);                
                tableSVByMH.setModel(table);
                notifyDSDiem.setVisible(true);
                notifyDSDiem.setText("Chưa Có Bảng Điểm!!!");
            }           
    }
    
    private ArrayList<Float> getStatistical(List<Diem> listDiem) {
        ArrayList<Float> listStatistical = new ArrayList<Float>();
        float pass = 0;
        float fail = 0;
        float percentPass = 0;
        float percentFail = 0;
        if (listDiem.size() > 0) {
            for (Diem diem : listDiem) {
                if (diem.xepLoai().equals("Đậu")) {
                    pass += 1;
                } else {
                    fail += 1;
                }
            }
        }
        percentPass = (pass * 100) / listDiem.size();
        percentFail = (fail * 100) / listDiem.size();

        listStatistical.add(pass);
        listStatistical.add(percentPass);
        listStatistical.add(fail);
        listStatistical.add(percentFail);

        return listStatistical;
    }
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String maMH = comboBoxMonHoc.getSelectedItem().toString();
        int i = tableSVByMH.getSelectedRow();
//
        DefaultTableModel model = (DefaultTableModel) tableSVByMH.getModel();

        boolean checked = isValidate();

        if(i >= 0 && !checked){
            String mssv = (String) tableSVByMH.getValueAt(i, 1);
            String xepLoai = (String) tableSVByMH.getValueAt(i, 7);
               
            float diemGK = Float.parseFloat(textGK.getText());
            float diemCK = Float.parseFloat(textCK.getText());
            float diemKhac = Float.parseFloat(textKhac.getText());
            float diemTong = Float.valueOf((diemGK + diemCK + diemKhac)/3);
            
            Sinhvien sv = SinhVienDAO.layThongTinSV(mssv);
            SvMonhoc svmh = SvMonHocDAO.layThongTin(className, maMH, mssv);
            Diem diem = DiemDAO.layDSDiemSV(svmh.getId(), sv);
            
            if(diem != null){
                diem.setDiemGk(diemGK);
                diem.setDiemCk(diemCK);
                diem.setDiemKhac(diemKhac);
                diem.setDiemTong(diemTong);
                
                boolean result = DiemDAO.updateDiem(diem);
                if(result == true){
                    model.setValueAt(textGK.getText(), i, 3);
                    model.setValueAt(textCK.getText(), i, 4);
                    model.setValueAt(textKhac.getText(), i, 5);
                    model.setValueAt(diemTong, i, 6);

                    if(diemTong < 5){
                        xepLoai = "Rớt";
                    } else {
                        xepLoai = "Đậu";
                    }
                    model.setValueAt(xepLoai, i, 7);
                    
                    JOptionPane.showMessageDialog(null, "!!! Cập Nhật Thành Công");
                    showTableDiem();
                    textMSSV.setText("");
                    textName.setText("");
                    textGK.setText("");
                    textCK.setText("");
                    textKhac.setText("");
                    
                } else {
                    JOptionPane.showMessageDialog(null, "!!! Cập Nhật Thất Bại");
                }                
            } 
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void textSLPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSLPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSLPassActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        String mssv = textMSSV.getText();

        Sinhvien sv = SinhVienDAO.layThongTinSV(mssv);
        List<Sinhvien> listSV = SvMonHocDAO.layThongTinSVMH(className, comboHocKi.getSelectedItem().toString(), comboBoxMonHoc.getSelectedItem().toString());
        List<SvMonhoc> list = SvMonHocDAO.getList();

        String maMH = comboBoxMonHoc.getSelectedItem().toString();
        SvMonhoc svmh = new SvMonhoc(mssv, maMH, className);
        //        System.out.println("id: " + svmh.getId());
        int stt = listSV.size()+1;

        if (mssv.equals("")) {
            JOptionPane.showMessageDialog(null,"Thông Tin Không Đầy Đủ!!");
        } else {
            for(SvMonhoc item : list){
                for(Sinhvien i : SvMonHocDAO.layThongTinById(item.getId())) {
                    if(i.isExistsMSSV(mssv)){
                        JOptionPane.showMessageDialog(null,"SV Đã Đăng Kí Môn Học Này....!!");
                        break;
                    } else if (sv == null){
                        JOptionPane.showMessageDialog(null,"SV Không Tồn Tại....!!");
                        break;
                    } else {
                        DefaultTableModel model = (DefaultTableModel) tableSVByMH.getModel();
                        Boolean kq = SvMonHocDAO.themSV(svmh);

                        if(kq == true){
                            model.addRow(new Object[]{stt,mssv, sv.getHoTen(), sv.getGioiTinh(), sv.getCmnd()});
                            JOptionPane.showMessageDialog(null, "Thêm Thành Công :)");
                            
                            showListSVMH(className, maMH, comboHocKi.getSelectedItem().toString());
                            
                            textMSSV.setText("");

                        } else {
                            JOptionPane.showMessageDialog(null, "Thêm Thất Bại :)");
                        }
                    }
                    break;
                }
                break;
            }

        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private boolean isValidate() {
        boolean valid = false;
        double diemGK = 0;
        double diemCK = 0;
        double diemKhac = 0;

        if (textGK.getText().equals("") || textCK.getText().equals("") || textKhac.getText().equals("")) {
            valid = true;
            JOptionPane.showMessageDialog(null, "Điểm Không Đầy Đủ !!!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            diemGK = Float.parseFloat(textGK.getText());
            diemCK = Float.parseFloat(textCK.getText());
            diemKhac = Float.parseFloat(textKhac.getText());
            
            if ((diemGK > 10 || diemGK < 0) || (diemCK > 10 || diemCK < 0) || (diemKhac > 10 || diemKhac < 0)) {
                valid = true;
                JOptionPane.showMessageDialog(null, "Điểm Không Hợp Lệ!!!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                valid = false;
            }
        }
        return valid;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(quanLyThoiKhoaBieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(quanLyThoiKhoaBieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(quanLyThoiKhoaBieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(quanLyThoiKhoaBieu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new quanLyThoiKhoaBieu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddSVBySubject;
    private javax.swing.JButton btnDSSV;
    private javax.swing.JButton btnDiem;
    private javax.swing.JButton btnImportDiem;
    private javax.swing.JButton btnImportTKB;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboBoxMonHoc;
    private javax.swing.JComboBox<String> comboHocKi;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelThongKe;
    public javax.swing.JLabel lableDSSVLop;
    private javax.swing.JLabel lableListMH;
    private javax.swing.JLabel lableTKB;
    private javax.swing.JLabel notify;
    private javax.swing.JLabel notifyDSDiem;
    private javax.swing.JPanel panelDSSV;
    private javax.swing.JPanel panelDiem;
    private javax.swing.JPanel panelInfoSV;
    private javax.swing.JPanel panelListSV;
    private javax.swing.JPanel panelThongKe;
    private javax.swing.JPanel panelUpdate;
    public javax.swing.JTable tableSVByMH;
    private javax.swing.JTable tableTKB;
    private javax.swing.JTextField textCK;
    private javax.swing.JTextField textGK;
    private javax.swing.JTextField textKhac;
    private javax.swing.JTextField textMSSV;
    private javax.swing.JTextField textName;
    private javax.swing.JTextField textSLFail;
    private javax.swing.JTextField textSLPass;
    private javax.swing.JTextField textTLFail;
    private javax.swing.JTextField textTLPass;
    private javax.swing.JTextField txtMSSV;
    // End of variables declaration//GEN-END:variables

    private void initLayout() { 
        comboBoxMonHoc.setVisible(false);
        lableListMH.setVisible(false);
        panelListSV.setVisible(false);
        panelUpdate.setVisible(false);
        panelInfoSV.setVisible(false);
        panelThongKe.setVisible(false);
        showALLTKB();
    }
    
    private void showALLTKB(){
        notify.setVisible(false);
        DefaultTableModel table = new DefaultTableModel();
        table.setColumnIdentifiers(columnTKBLop);
        lableTKB.setText("Thời Khóa Biểu " + className);
        List<Thoikhoabieu> tkb_lop = ThoiKhoaBieuDAO.layTKBByLop(className);
        if(tkb_lop.size() > 0){
            int stt = 1;
            for(Thoikhoabieu i : tkb_lop){
                Monhoc monHoc = MonHocDAO.laỵThongTinMonHoc(i.getId().getMaMh());
                
                String[] item = new String[4];
                item[0] = String.valueOf(stt);
                item[1] = i.getId().getMaMh();
                item[2] = monHoc.getTenMh();
                item[3] = i.getHocKi();
                
                table.addRow(item);
                stt++;
            }
            tableTKB.setModel(table);
        } else {
            notify.setVisible(true);
            tableTKB.setModel(table);
        }
    }
    
    private void chiTietTKB(String hocKi){                
        DefaultTableModel table = new DefaultTableModel();
        DefaultComboBoxModel comboMonHoc = new DefaultComboBoxModel();
        
        notify.setVisible(false);
        table.setColumnIdentifiers(columnNames);
        hocKi = comboHocKi.getSelectedItem().toString();
        lableTKB.setText("Thời Khóa Biểu: " + className + " - " + hocKi);
        List<Thoikhoabieu> tkb_lop_hk = ThoiKhoaBieuDAO.layTKBByLop_HocKi(className, hocKi);
        
        if(tkb_lop_hk.size() > 0){
            int stt = 1;
            for(Thoikhoabieu i : tkb_lop_hk){
                comboMonHoc.addElement(i.getId().getMaMh());
                Monhoc monHoc = MonHocDAO.laỵThongTinMonHoc(i.getId().getMaMh());
                
                String[] item = new String[4];
                item[0] = String.valueOf(stt);
                item[1] = i.getId().getMaMh();
                item[2] = monHoc.getTenMh();
                item[3] = i.getPhongHoc();
                
                table.addRow(item);                
                stt++;
            }
            comboBoxMonHoc.setModel(comboMonHoc);
            tableTKB.setModel(table);
        } else {
            comboBoxMonHoc.setModel(comboMonHoc);
            notify.setVisible(true);
            tableTKB.setModel(table);
        }
    }
    
    private void importFile(String title, int type) {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle(title);
        int choose = -1;
        switch (type) {
            case IMPORT_FILE:
                choose = fileChooser.showOpenDialog(null);
                break;   
            case IMPORT_FILE_SCORE:
                choose = fileChooser.showOpenDialog(null);
                break;
        }

        if (choose == JFileChooser.APPROVE_OPTION) {
            File f = fileChooser.getSelectedFile();
            switch (type) {
                case IMPORT_FILE:
                    readFile(f);
                    break;   
                case IMPORT_FILE_SCORE:
                    readFileScore(f);
                    break;
            }
        }
    }

    private void readFile(File file) {
        try {
            try (FileReader reader = new FileReader(file)) {
                BufferedReader buffer = new BufferedReader(reader);

                String line;
                
                line = buffer.readLine();
                String[] title = line.split(",");
//                String maLop = title[0];
                String maLop = title[0];
                String hocKi = comboHocKi.getSelectedItem().toString();
                Thoikhoabieu tkb = new Thoikhoabieu();
                String tenLop = className.replaceAll("\\?", "");
                if(tenLop.equalsIgnoreCase(maLop) || hocKi.equalsIgnoreCase(title[1])){  
                    while ((line = buffer.readLine()) != null) {                        
                        String[] info = line.split(",");
                        String maMon = info[0];
                        Monhoc monHoc = MonHocDAO.laỵThongTinMonHoc(maMon);
                        ThoikhoabieuId id = new ThoikhoabieuId(maLop, maMon);
                        
                        tkb.setId(id);
                        tkb.setMonhoc(monHoc);
                        tkb.setPhongHoc(info[2]);
                        tkb.setHocKi(hocKi);
                        tkb.setTenMon(info[1]);
                        
                        ThoiKhoaBieuDAO.themTKB(tkb);                        
                    }                                        
                } else {
                    JOptionPane.showMessageDialog(null, "Thời Khóa Biểu Sai Lớp..... ");  
                }                
               buffer.close();
            } 
            chiTietTKB(comboHocKi.getSelectedItem().toString());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error to open file: " + e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void showListSVMH(String maLop, String maMon, String hocKi){
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.setColumnIdentifiers(columnTableSVMH);
        lableDSSVLop.setText("Danh sách sinh viên: " + maLop + "-" +  maMon);
        notify.setVisible(false);
        int stt = 1;
        List<Sinhvien> list = SvMonHocDAO.layThongTinSVMH(maLop,hocKi, maMon);
        if(list.size() > 0){
            for(Sinhvien sv : list){
                String[] item = new String[5];
                item[0] = String.valueOf(stt);
                item[1] = sv.getMssv();
                item[2] = sv.getHoTen();
                item[3] = sv.getGioiTinh();
                item[4] = sv.getCmnd();

                tableModel.addRow(item);
                stt++;
            }
            tableSVByMH.setModel(tableModel);
        } else {
            tableSVByMH.setModel(tableModel);
            notifyDSDiem.setVisible(true);
            notifyDSDiem.setText("Chưa có DSSV....");
        }
        
    }

    private void readFileScore(File file) {
        try{
            try (FileReader reader = new FileReader(file)){
                BufferedReader buffer = new BufferedReader(reader);

                String line;
                
                line = buffer.readLine();
                String[] title = line.split(",");
                String maMon = comboBoxMonHoc.getSelectedItem().toString();
                
                String target = className.replaceAll("\\?", "") + "-" + maMon;
                if(target.equals(target)){
                    while((line = buffer.readLine()) != null){
                        String[] info = line.split(",");
                        Sinhvien sv = SinhVienDAO.layThongTinSV(info[1]);
                        
                        if(sv != null){ 
                            Diem diem = new Diem(Integer.valueOf(info[0]), sv);
                            diem.setDiemGk(Float.valueOf(info[3]));
                            diem.setDiemCk(Float.valueOf(info[4]));
                            diem.setDiemKhac(Float.valueOf(info[5]));
                            diem.setDiemTong(Float.valueOf(info[6]));
                            diem.setIdSvmh(Integer.valueOf(info[0]));
                            diem.setMaLop(className);
                            diem.setMaMh(maMon);
                            DiemDAO.themTableDiem(diem);
                        } else {
                            System.out.println(info[0]);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "File Điểm Không Đúng Lớp..... ");
                }                
                
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error to open file: " + e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }

}
