/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlysinhvien_02;

import DAO.AccountDAO;
import DAO.LopDAO;
import DAO.NamHocDAO;
import DAO.SinhVienDAO;
import POJO.Account;
import POJO.Lop;
import POJO.Namhoc;
import POJO.Sinhvien;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.OutputStreamWriter;
import java.nio.charset.StandardCharsets;
import java.util.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import static quanlysinhvien_02.login.account;
/**
 *
 * @author Gogojungle
 */
public class quanlylop extends javax.swing.JFrame {

    /**
     * Creates new form quanlylop
     */
    private final int IMPORT_FILE = 1;
    private final int EXPORT_FILE = 2;
    private String[] columName = {
        "STT", "MSSV", "Họ Tên", "Giới Tính", "CMND"
    };
     private String className = "";
    quanLyThoiKhoaBieu tkb;
    
    public quanlylop() {
        initComponents();
        this.initLayout();
    }

    public quanlylop(String _classname, quanLyThoiKhoaBieu _tkb) {
        this.className = _classname;
        this.tkb = _tkb;
        initComponents();
        initLayout();
        this.tkb.setVisible(false);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jsvTable = new javax.swing.JTable();
        panelDoiMK = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textMKCu = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textAgain = new javax.swing.JTextField();
        btnSaveNewPass = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        textMKMoi = new javax.swing.JTextField();
        btnLogout = new javax.swing.JButton();
        btnDoiMK = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        classCombo = new javax.swing.JComboBox<>();
        lableDSSV = new javax.swing.JLabel();
        notifySelectClass = new javax.swing.JLabel();
        lableNotify = new javax.swing.JLabel();
        btnExport = new javax.swing.JButton();
        cbbNamHoc = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnTKB = new javax.swing.JButton();
        panelInfoSV = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        textHoTen = new javax.swing.JTextField();
        textCMND = new javax.swing.JTextField();
        textMSSV = new javax.swing.JTextField();
        rBtnNam = new javax.swing.JRadioButton();
        rBtnNu = new javax.swing.JRadioButton();
        btnUpdate = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Giáo Vụ Quản Lý");

        jScrollPane1.setAutoscrolls(true);

        jsvTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jsvTable.setAutoscrolls(false);
        jsvTable.setColumnSelectionAllowed(true);
        jsvTable.setFocusable(false);
        jsvTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jsvTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jsvTable);

        panelDoiMK.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Đổi Mật Khẩu");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Mật Khẩu Cũ:");

        textMKCu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Nhập Lại MK:");

        textAgain.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        btnSaveNewPass.setBackground(new java.awt.Color(0, 153, 153));
        btnSaveNewPass.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSaveNewPass.setText("Lưu");
        btnSaveNewPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveNewPassActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Mật Khẩu Mới:");

        textMKMoi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout panelDoiMKLayout = new javax.swing.GroupLayout(panelDoiMK);
        panelDoiMK.setLayout(panelDoiMKLayout);
        panelDoiMKLayout.setHorizontalGroup(
            panelDoiMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDoiMKLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(panelDoiMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(panelDoiMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textMKCu, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                    .addComponent(textAgain))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelDoiMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textMKMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelDoiMKLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnSaveNewPass, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDoiMKLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(298, 298, 298))
        );
        panelDoiMKLayout.setVerticalGroup(
            panelDoiMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDoiMKLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addGroup(panelDoiMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textMKCu, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textMKMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelDoiMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSaveNewPass, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelDoiMKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)))
                .addContainerGap())
        );

        btnLogout.setBackground(new java.awt.Color(204, 204, 255));
        btnLogout.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        btnDoiMK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDoiMK.setText("Đổi MK");
        btnDoiMK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoiMKActionPerformed(evt);
            }
        });

        btnImport.setBackground(new java.awt.Color(153, 204, 255));
        btnImport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnImport.setText("Import");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Danh Sách Lớp:");

        classCombo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        classCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--" }));
        classCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classComboActionPerformed(evt);
            }
        });

        lableDSSV.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lableDSSV.setForeground(new java.awt.Color(0, 153, 153));
        lableDSSV.setText("DSSV");

        notifySelectClass.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        notifySelectClass.setForeground(new java.awt.Color(0, 153, 153));
        notifySelectClass.setText("**Chọn lớp để xem DSSV");

        lableNotify.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lableNotify.setForeground(new java.awt.Color(255, 0, 0));
        lableNotify.setText("jLabel3");

        btnExport.setBackground(new java.awt.Color(204, 204, 204));
        btnExport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnExport.setText("Export");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        cbbNamHoc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbNamHoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbbNamHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbNamHocActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Năm học:");

        btnTKB.setBackground(new java.awt.Color(153, 204, 255));
        btnTKB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTKB.setText("Xem TKB");
        btnTKB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTKBActionPerformed(evt);
            }
        });

        panelInfoSV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("MSSV:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Họ Tên:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Giới Tính:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("CMND:");

        textHoTen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        textCMND.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        textMSSV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        rBtnNam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rBtnNam.setText("Nam");

        rBtnNu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rBtnNu.setText("Nữ");

        btnUpdate.setBackground(new java.awt.Color(153, 204, 255));
        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(204, 204, 204));
        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(153, 204, 255));
        btnSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSave.setText("Thêm");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelInfoSVLayout = new javax.swing.GroupLayout(panelInfoSV);
        panelInfoSV.setLayout(panelInfoSVLayout);
        panelInfoSVLayout.setHorizontalGroup(
            panelInfoSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoSVLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(panelInfoSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelInfoSVLayout.createSequentialGroup()
                        .addGroup(panelInfoSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(panelInfoSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textMSSV, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelInfoSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelInfoSVLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(rBtnNam)
                                .addGap(37, 37, 37)
                                .addComponent(rBtnNu))
                            .addGroup(panelInfoSVLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelInfoSVLayout.createSequentialGroup()
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 46, Short.MAX_VALUE))
        );
        panelInfoSVLayout.setVerticalGroup(
            panelInfoSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInfoSVLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(panelInfoSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(textMSSV, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rBtnNam)
                    .addComponent(rBtnNu))
                .addGap(21, 21, 21)
                .addGroup(panelInfoSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(textCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(panelInfoSVLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnXoa)
                    .addComponent(btnSave))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(notifySelectClass)
                .addGap(336, 336, 336))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbbNamHoc, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(classCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 867, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(35, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lableDSSV)
                        .addGap(18, 18, 18)
                        .addComponent(lableNotify, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147)
                        .addComponent(btnTKB, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(panelDoiMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogout)
                    .addComponent(btnDoiMK, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
            .addGroup(layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(panelInfoSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelDoiMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btnLogout)
                        .addGap(25, 25, 25)
                        .addComponent(btnDoiMK)))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(classCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnImport))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(cbbNamHoc, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(notifySelectClass)
                .addGap(18, 18, 18)
                .addComponent(panelInfoSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lableDSSV)
                    .addComponent(lableNotify)
                    .addComponent(btnExport)
                    .addComponent(btnTKB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void initLayout() {
        btnExport.setVisible(false);
        panelDoiMK.setVisible(false);
        jsvTable.setVisible(false);
        
        notifySelectClass.setVisible(false);
        lableNotify.setVisible(false);  
        
        panelInfoSV.setVisible(false);
        addDataForComboBoxYear();
    }
    
    private boolean validFormChangePass(){
        boolean valid = false;
        String oldPass = textMKCu.getText();
        String newPass = textMKMoi.getText();
        String passAgain = textAgain.getText();
        
        if(oldPass.equals("") || newPass.equals("") || passAgain.equals("")){
            JOptionPane.showMessageDialog(null, "Vui Lòng Nhập Mật Khẩu Đầy Đủ !!!", "Error", JOptionPane.ERROR_MESSAGE);
            valid = true;
        } else {
            if(!account.getPasswword().equals(oldPass)){
                
                JOptionPane.showMessageDialog(null, "Mật Khẩu Cũ Không Chính Xác!!!", "Error", JOptionPane.ERROR_MESSAGE);
                valid = true;
            } else if(!passAgain.equals(newPass)){
                JOptionPane.showMessageDialog(null, "Mật Khẩu Xác Nhận Không Chính Xác!!!", "Error", JOptionPane.ERROR_MESSAGE);
                valid = true;
            } else{
                valid = false;
            }            
        }
        return valid;
    }
    
    private void btnSaveNewPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveNewPassActionPerformed
        // TODO add your handling code here:
        boolean checked = validFormChangePass();
        if(!checked){
            String username = account.getUsername();
            Account acc = AccountDAO.layThongTinTaiKhoan(username);
            
            if(acc != null){
                acc.setPasswword(textMKMoi.getText());
                boolean kq = AccountDAO.updatePassword(acc);
                if(kq == true){
                    JOptionPane.showMessageDialog(null, "Đổi mật khẩu thành công.", "Notify", JOptionPane.INFORMATION_MESSAGE);
                    new login().setVisible(true);                    
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Đổi mật khẩu thất bại.", "Notify", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnSaveNewPassActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        new login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnDoiMKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoiMKActionPerformed
        // TODO add your handling code here:
        panelDoiMK.setVisible(true);
    }//GEN-LAST:event_btnDoiMKActionPerformed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        importExportFile("Choose file import", IMPORT_FILE);
    }//GEN-LAST:event_btnImportActionPerformed

    private void classComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classComboActionPerformed
        if(classCombo.getSelectedItem().toString().equals("--")){            
            JOptionPane.showMessageDialog(null, "!!! Chưa Có Danh Sách Lớp");
        } else{           
            panelInfoSV.setVisible(true);                        
            textMSSV.setText("");
            textHoTen.setText("");
            textCMND.setText("");
            rBtnNam.setSelected(false);
            rBtnNu.setSelected(false);
            addDataForTableListSV();
        }
    }//GEN-LAST:event_classComboActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        importExportFile("Export File", EXPORT_FILE);
    }//GEN-LAST:event_btnExportActionPerformed

    private void cbbNamHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbNamHocActionPerformed
        // TODO add your handling code here:
        Namhoc nh = NamHocDAO.layThongTinNamHoc(Integer.valueOf(cbbNamHoc.getSelectedItem().toString()));
        DefaultComboBoxModel cbModel = new DefaultComboBoxModel();
        if(nh.getLops().size() > 0){   
//            System.out.println("size: " + nh.getLops().size());
            addDataForComboBoxClass();            
        } else{            
            classCombo.setModel(cbModel);
            JOptionPane.showMessageDialog(null, "!!! Chưa Có Danh Sách Lớp");
            lableNotify.setVisible(true); 
            lableNotify.setText("Chưa Có Danh Sách Lớp!");
        }
    }//GEN-LAST:event_cbbNamHocActionPerformed

    private void btnTKBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTKBActionPerformed
        // TODO add your handling code here:
        String nameClass = getClassNameInComboBox();
        if(!(nameClass.equals("--"))){
            tkb = new quanLyThoiKhoaBieu(nameClass, this);
            tkb.setVisible(true);
            this.setVisible(false);
        }
        else{
            JOptionPane.showMessageDialog(null, "!!! Vui Lòng Chọn Lớp");
        }
    }//GEN-LAST:event_btnTKBActionPerformed

    private void jsvTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jsvTableMouseClicked
        // TODO add your handling code here:
        int index = jsvTable.getSelectedRow();
        TableModel md = jsvTable.getModel();
        if(index >= 0){
            String mssv = md.getValueAt(index, 1).toString();
            String hoTen = md.getValueAt(index, 2).toString();
            String gioiTinh = md.getValueAt(index, 3).toString();
            String cmnd = md.getValueAt(index, 4).toString();

            textMSSV.setText(mssv);
            textHoTen.setText(hoTen);
            textCMND.setText(cmnd);
            if (!gioiTinh.equals("Nam")){
                rBtnNu.setSelected(true);
                rBtnNam.setSelected(false);
            } else{
                rBtnNu.setSelected(false);                
                rBtnNam.setSelected(true);
            }
        }
    }//GEN-LAST:event_jsvTableMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:        
        String mssv = textMSSV.getText();
        String hoTen = textHoTen.getText();
        String cmnd = textCMND.getText();  
        String gt = "";
        if(rBtnNam.isSelected()){
            gt = "Nam";
        } else {
            gt = "Nữ";
        }
        
        boolean isCheck = validCheck();
        if(!isCheck){            
            Lop lop = LopDAO.layThongTinLop(getClassNameInComboBox());            
            Sinhvien sv = new Sinhvien(mssv, hoTen, gt, cmnd, lop);
            int stt = lop.getListSV().size()+1;
            if (mssv.equals("") || hoTen.equals("") || cmnd.equals("") || rBtnNam.isSelected() == false && rBtnNu.isSelected() == false) {
                JOptionPane.showMessageDialog(null,"Thông Tin Không Đầy Đủ!!");
            } else {
                DefaultTableModel model = (DefaultTableModel) jsvTable.getModel();
                model.addRow(new Object[]{stt,mssv, hoTen, gt, cmnd});                
                SinhVienDAO.themSV(sv);                
                JOptionPane.showMessageDialog(null, "Thêm Sinh Viên Thành Công :)");
                textMSSV.setText("");
                textHoTen.setText("");
                textCMND.setText("");
                rBtnNam.setSelected(false);
                rBtnNu.setSelected(false);
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        TableModel md = jsvTable.getModel();
        int index = jsvTable.getSelectedRow();
        Sinhvien sv = SinhVienDAO.layThongTinSV(md.getValueAt(index, 1).toString());
        
        String mssv = textMSSV.getText();
        String hoTen = textHoTen.getText();
        String cmnd = textCMND.getText();  
        String gt = "";
        if(rBtnNam.isSelected()){
            gt = "Nam";
        } else {
            gt = "Nữ";
        }
        
        if(mssv.equals("") || hoTen.equals("") || cmnd.equals("") || rBtnNam.isSelected() == false && rBtnNu.isSelected() == false) {
            JOptionPane.showMessageDialog(null,"Thông Tin Không Đầy Đủ!!");
        } else {
            if(sv != null) {
                sv.setMssv(mssv);
                sv.setHoTen(hoTen);
                sv.setGioiTinh(gt);
                sv.setCmnd(cmnd);        
                
                boolean result = SinhVienDAO.updateSV(sv);
                if(result == true){
                    md.setValueAt(mssv, index, 1);
                    md.setValueAt(hoTen, index, 2);
                    md.setValueAt(gt, index, 3);
                    md.setValueAt(cmnd, index, 4);                    
                    JOptionPane.showMessageDialog(null, "!!! Cập Nhật Thành Công");
                } else{
                    JOptionPane.showMessageDialog(null, "!!! Cập Nhật Thất Bại");
                }                
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        boolean result = SinhVienDAO.xoaSV(textMSSV.getText());
        if(result == true){
            DefaultTableModel model = (DefaultTableModel) jsvTable.getModel();
            int index = jsvTable.getSelectedRow();
            model.removeRow(index);
                    
            textMSSV.setText("");
            textHoTen.setText("");
            textCMND.setText("");
            rBtnNam.setSelected(false);
            rBtnNu.setSelected(false);
            JOptionPane.showMessageDialog(null, "!!! Xóa Thành Công");
        } else{
            JOptionPane.showMessageDialog(null, "!!! Xóa Thất Bại");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private boolean validCheck(){
        boolean isValid = false;        
        String mssv = textMSSV.getText();
        System.out.println(mssv);
        Lop lop = LopDAO.layThongTinLop(getClassNameInComboBox());
        for (Sinhvien sv : lop.getListSV()) {
            if (sv.isExistsMSSV(mssv)) {
                JOptionPane.showMessageDialog(null,"MSSV đã tồn tại.");
                isValid = true;
            }
        }
        return isValid;  
    }
    
    private void addDataForComboBoxYear(){
        List<Namhoc> listNamHoc = NamHocDAO.layDSNamHoc();
        DefaultComboBoxModel cbModel = new DefaultComboBoxModel();
        for(Namhoc i : listNamHoc){ 
            int namHoc = i.getNamHoc();
            cbModel.addElement(namHoc);
        }          
        cbbNamHoc.setModel(cbModel);
    }
    
    private void addDataForComboBoxClass(){
        String value = getYearInComboBox();
        DefaultComboBoxModel cbModel = new DefaultComboBoxModel();
        Namhoc nh = NamHocDAO.layThongTinNamHoc(Integer.valueOf(value));
        
        for(Lop i : nh.getLops()){
            if(Integer.valueOf(value) == i.getNamhoc().getNamHoc()) {
                lableNotify.setVisible(false); 
                notifySelectClass.setVisible(true);
                String name = i.getMaLop();
                cbModel.addElement(name);
            } else { 
                notifySelectClass.setVisible(false);
                lableNotify.setVisible(true);  
                lableNotify.setText("Chưa Có Danh Sách Lớp!");
            }
        }
        classCombo.setModel(cbModel);        
    }
    
    public String getClassNameInComboBox(){
        String result = classCombo.getSelectedItem().toString();
        return result;
    }
    
    public String getYearInComboBox(){
        String result = cbbNamHoc.getSelectedItem().toString();
        return result;
    }
    
    
    private void addDataForTableListSV(){
        jsvTable.setVisible(true);
        String select = getClassNameInComboBox();
//        System.out.println("Select: " + select);
        lableDSSV.setText("DANH SÁCH SINH VIÊN:  " + select);  
        Lop lop = LopDAO.layThongTinLop(select);
          
        DefaultTableModel tbModel = new DefaultTableModel();
        tbModel.setColumnIdentifiers(columName);
        int stt = 1;
        
        if(lop.getListSV().size() > 0){
            btnExport.setVisible(true);

            // get danh sách sinh viên và hiển thị lên table    
            for (Sinhvien sv : lop.getListSV()) {
                String[] info = new String[5];
                info[0] = String.valueOf(stt);
                info[1] = sv.getMssv();
                info[2] = sv.getHoTen();
                info[3] = sv.getGioiTinh();
                info[4] = sv.getCmnd();

                tbModel.addRow(info);
                stt++;
            }
            jsvTable.setModel(tbModel);
        } 
        else{
            btnExport.setVisible(false);
            tbModel.setColumnIdentifiers(columName);
            jsvTable.setModel(tbModel);
        }            
    }
    
    private void importExportFile(String title, int type) {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle(title);
        int choose = -1;
        switch (type) {
            case IMPORT_FILE:
                choose = fileChooser.showOpenDialog(null);
                break;
            case EXPORT_FILE:
                choose = fileChooser.showSaveDialog(null);
                break;
        }

        if (choose == JFileChooser.APPROVE_OPTION) {
            File f = fileChooser.getSelectedFile();
            switch (type) {
                case IMPORT_FILE:
                    readFile(f);
                    break;
                case EXPORT_FILE:
                    writeFile(f);
                    break;
            }
        }
    }
    
    private void readFile(File file) {
        try {
            try (FileReader reader = new FileReader(file)) {
                BufferedReader buffer = new BufferedReader(reader);

                String line;
                
                line = buffer.readLine();
                String[] tenLop = line.split(",");
//                String maLop = tenLop[0].replaceAll("\\?", "");
                Lop lop = LopDAO.layThongTinLop(tenLop[0]);
                
                Namhoc nh = NamHocDAO.layThongTinNamHoc(Integer.valueOf(getYearInComboBox()));
//                System.out.println(Integer.parseInt(tenLop[1]));

                boolean checkLopHoc = true;
                if(nh.getNamHoc() == Integer.parseInt(tenLop[1])) {
                    if(lop == null) {
                        checkLopHoc = false;
                        lop = new Lop();
                        lop.setMaLop(tenLop[0]);
                        lop.setNamhoc(nh);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Import Danh Sách Không Đúng Năm Học!!!!");
                }
                if(checkLopHoc != true ){ 
                    boolean kq = LopDAO.themLop(lop);
                    if(kq == true){
                        System.out.println("Thêm Thành công");
                        while ((line = buffer.readLine()) != null) {                     
                            String[] info = line.split(",");
                            Sinhvien sv = new Sinhvien(info[1], info[2], info[3], info[4], lop);
                            
                            SinhVienDAO.themSV(sv);
                        }
                    } else {
                        System.out.println("Không Thành công");
                    }
                }
                buffer.close();
            }
            initLayout();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error to open file: " + e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void writeFile(File file) {
        try{            
            file.createNewFile();
            FileOutputStream fos = new FileOutputStream(file);
            
            BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(fos, StandardCharsets.UTF_8));
                        
            String tenLop = getClassNameInComboBox();
            Lop lop = LopDAO.layThongTinLop(tenLop);
            
            writer.append(tenLop);
            writer.append('\n');
            
            writer.append("STT,");
            writer.append(columName[1]);
            writer.append(",");
            writer.append(columName[2]);
            writer.append(",");
            writer.append(columName[3]);
            writer.append(",");
            writer.append(columName[4]);
            writer.append('\n');            
                        
            if (lop.getListSV().size() > 0) {
                int stt = 1;
                // Lấy danh sách học sinh trong lớp
                for (Sinhvien sv : lop.getListSV()) {
                    writer.append(Integer.toString(stt) + ',');                    
                    writer.append(sv.getMssv());
                    writer.append(',');
                    writer.append(sv.getHoTen());
                    writer.append(',');
                    writer.append(sv.getGioiTinh());
                    writer.append(',');
                    writer.append(sv.getCmnd());
                    writer.append('\n');
                    
                    stt++;
                }
                
            }
            writer.close();
            
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Error to export file: " + e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(quanlylop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(quanlylop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(quanlylop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(quanlylop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new quanlylop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDoiMK;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveNewPass;
    private javax.swing.JButton btnTKB;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbbNamHoc;
    private javax.swing.JComboBox<String> classCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jsvTable;
    private javax.swing.JLabel lableDSSV;
    private javax.swing.JLabel lableNotify;
    private javax.swing.JLabel notifySelectClass;
    private javax.swing.JPanel panelDoiMK;
    private javax.swing.JPanel panelInfoSV;
    private javax.swing.JRadioButton rBtnNam;
    private javax.swing.JRadioButton rBtnNu;
    private javax.swing.JTextField textAgain;
    private javax.swing.JTextField textCMND;
    private javax.swing.JTextField textHoTen;
    private javax.swing.JTextField textMKCu;
    private javax.swing.JTextField textMKMoi;
    private javax.swing.JTextField textMSSV;
    // End of variables declaration//GEN-END:variables
}
